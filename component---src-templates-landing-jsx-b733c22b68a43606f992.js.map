{"version":3,"sources":["webpack://gatsby-starter-advanced/./src/components/Button.tsx","webpack://gatsby-starter-advanced/./src/components/Hero.tsx","webpack://gatsby-starter-advanced/./src/components/PostListing/PostListing.jsx","webpack://gatsby-starter-advanced/./src/components/PostListing/CoverPostListing.jsx","webpack://gatsby-starter-advanced/./src/components/PostListing/SidePostListing.jsx","webpack://gatsby-starter-advanced/./src/components/Books.tsx","webpack://gatsby-starter-advanced/./src/templates/landing.jsx"],"names":["styled","Container","onMobile","Subtitle","Social","props","restProps","href","target","UserLinks","config","Title","PostDate","PostItem","FlexContainer","breakpoint","FlexItem","width","postEdges","postList","forEach","postEdge","tags","node","frontmatter","tag","push","path","fields","renderedPathname","cover","title","date","excerpt","timeToRead","map","post","key","Link","to","format","parseISO","MorePostLink","onSmallMobile","Excerpt","TagContainer","Tag","onTablet","maxLength","length","splice","console","log","unsplashImgCoverId","className","src","getUnsplashImageURL","Date","getTagPathname","PostMetadata","trending","pageview","trendingPageview","numeral","bookData","name","url","image","BookItem","BookTitle","BookCover","book","data","allMarkdownRemark","edges","popularPostEdges","popularPost","trendingPostEdges","trendingPost","isMobile","useResponsive","PageLayout","wide","Helmet","SEO","TwoColumnLayout","TwoColumnItem","main","Hero","Header","HorizontalDivider","SubHeader","style","marginTop","p"],"mappings":"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","file":"component---src-templates-landing-jsx-b733c22b68a43606f992.js","sourcesContent":["import styled from 'styled-components';\n\nconst LinkButton = styled.a`\n  font-weight: bold;\n  padding: 10px;\n  border-radius: 10px;\n  :hover{\n    background: var(--colors-hover-0);\n    cursor: pointer;\n  }\n  i{\n    color: var(--color-default);\n    font-size: 1.2em;\n  }\n`;\n\nexport default LinkButton;\n","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { onMobile, onTablet } from '../themes/responsive';\nimport \"../themes/font-awesome-all-5.2.0.css\";\nimport LinkButton from \"./Button\";\nimport UserLinks from \"./UserLinks/UserLinks\";\nimport config from \"../../data/SiteConfig\";\n\nconst Hero = (props: any) => {\n  const { ...restProps } = props;\n\n  return (\n    <Container {...restProps}>\n      <h2>Hi ðŸ‘‹ I'm Thada, DevSecOps Engineer, welcome to my blog. <Subtitle>\n        Sharing ideas, programming techniques, web technology and others.</Subtitle></h2>\n        <LinkButton href=\"/about\">ðŸ‘¤&nbsp; About Me</LinkButton>\n        <LinkButton href=\"/cv\" target=\"_blank\">ðŸ“„&nbsp; Resume</LinkButton>\n        {/* <LinkButton href=\"https://github.com/mildronize\" target=\"_blank\"><i className=\"fab fa-github\"></i>&nbsp; Github</LinkButton> */}\n        <Social>Getting to know me: <UserLinks config={config} /></Social>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n\n  margin-bottom: 100px;\n\n  h2{\n    font-family: var(--font-family-inter);\n    font-size: 1.3rem;\n\n    ${onMobile} {\n      font-size: 1.6rem;\n    }\n\n  }\n`;\n\n\nconst Subtitle = styled.span`\n  color: var(--colors-text-2);\n`;\n\nconst Social = styled.p`\n  margin-left: 8px;\n  margin-top: 20px;\n  font-size: 0.7rem;\n`;\n\nexport default Hero;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { parseISO, format } from \"date-fns\";\n\nfunction PostListing({ postEdges }) {\n  const postList = [];\n  postEdges.forEach((postEdge) => {\n    const tags = [];\n    if (postEdge.node.frontmatter.tags) {\n      postEdge.node.frontmatter.tags.forEach((tag) => {\n        tags.push(tag);\n      });\n    }\n\n    postList.push({\n      path:  postEdge.node.fields.renderedPathname,\n      tags,\n      cover: postEdge.node.frontmatter.cover,\n      title: postEdge.node.frontmatter.title,\n      date: postEdge.node.fields.date?postEdge.node.fields.date: \"2021-01-01\",\n      excerpt: postEdge.node.excerpt,\n      timeToRead: postEdge.node.timeToRead,\n    });\n  });\n\n  return (\n    <div>\n      {\n        /* Your post list here. */\n        postList.map((post) => (\n          <PostItem  key={post.path}>\n            <Link to={post.path} >\n              {/* <a className=\"post-item-link\"> */}\n              <FlexContainer>\n                <FlexItem width=\"150px\">\n                  <PostDate >\n                    {format(parseISO(post.date), \"yyyy MMM, d\")}\n                  </PostDate>\n                </FlexItem>\n                <FlexItem >\n                  <Title>{post.title}</Title>\n                  {/* <TagContainer>\n                    {post.tags.map((tag) => (\n                      <Tag>#{tag} </Tag>\n                    ))}\n                  </TagContainer> */}\n                </FlexItem>\n              </FlexContainer>\n            </Link>\n          </PostItem>\n        ))\n      }\n    </div>\n  );\n}\n\nconst Title = styled.h4`\n  font-family: var(--font-family-heading);\n`;\n\n\nconst PostDate = styled.time`\n  color: var(--colors-text-3);\n  font-weight: 400;\n  font-size: 1rem;\n`;\n\nconst PostItem = styled.div`\n  margin-bottom:10px;\n\n  a, a:visited{\n    display: inline-block;\n    color: var(--text-heading);\n    font-weight: 400;\n    font-size: 1.2rem;\n    line-height: 1.5;\n    text-decoration: none;\n    width:100%;\n    padding: 20px 15px 20px 15px;\n    border-radius: 10px;\n  }\n\n  a:hover{\n    background: var(--colors-hover-0);\n  }\n\nh4{\n  margin:0;\n  padding:0;\n}\n`;\n\nconst TagContainer = styled.div`\n  margin-top: -5px;\n  margin-bottom:20px;\n`;\n\nconst Tag = styled.span`\n  color: var(--colors-text-3);\n  font-size: 0.8rem;\n  margin-right: 20px;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  ${breakpoint('tablet')`\n    flex-wrap: nowrap;\n  `}\n`;\n\nconst FlexItem = styled.div`\n  min-width: 100%;\n\n  ${breakpoint('tablet')`\n    min-width: ${({ width }) => (width ? width : 0)};\n  `}\n`;\n\nexport default PostListing;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { parseISO, format } from \"date-fns\";\nimport { getUnsplashImageURL, getTagPathname } from \"../../utils/path-utils\";\nimport { onSmallMobile, onMobile, onTablet } from \"../../themes/responsive\";\n// import Tag from \"../Tag\";\n\nfunction CoverPostListing({ postEdges }) {\n  const postList = [];\n  postEdges.forEach((postEdge) => {\n    let tags = [];\n    if (postEdge.node.frontmatter.tags) {\n      postEdge.node.frontmatter.tags.forEach((tag) => {\n        tags.push(tag);\n      });\n    }\n    const maxLength = tags.length > 3? 3: tags.length;\n    tags = tags.splice(0, maxLength);\n\n\n    console.log(postEdge.node.frontmatter)\n    postList.push({\n      path:  postEdge.node.fields.renderedPathname,\n      tags,\n      cover: postEdge.node.frontmatter.cover,\n      title: postEdge.node.frontmatter.title,\n      date: postEdge.node.fields.date?postEdge.node.fields.date: \"2021-01-01\",\n      excerpt: postEdge.node.excerpt,\n      timeToRead: postEdge.node.timeToRead,\n      unsplashImgCoverId: postEdge.node.frontmatter.unsplashImgCoverId,\n    });\n  });\n\n  return (\n    <Container>\n      {\n        /* Your post list here. */\n        postList.map((post) => (\n          <PostItem  key={post.path}>\n              <FlexContainer>\n                <FlexItem cover>\n                  <Link className=\"post-link\" to={post.path} >\n                    <img src={getUnsplashImageURL(post.unsplashImgCoverId, 230, 140)} />\n                  </Link>\n                </FlexItem>\n                <FlexItem >\n                  <Link className=\"post-link\" to={post.path} >\n                    <Title>{post.title}</Title>\n                    <Excerpt>{post.excerpt}</Excerpt>\n                  </Link>\n                  <PostDate className=\"post-metadata\" >\n                    {format(new Date(), \"yyyy\") === format(parseISO(post.date), \"yyyy\")\n                      ? format(parseISO(post.date), \"MMM, d\")\n                      : format(parseISO(post.date), \"yyyy MMM, d\")}\n                  </PostDate>\n                  <TagContainer>\n                    {post.tags.map((tag) => (\n                      <Tag><Link to={getTagPathname(tag)}>{tag}</Link></Tag>\n                    ))}\n                  </TagContainer>\n                </FlexItem>\n              </FlexContainer>\n\n          </PostItem>\n        ))\n      }\n\n    <MorePostLink >\n      <Link to=\"/posts/\" ><h4>More posts...</h4></Link>\n    </MorePostLink>\n    </Container>\n  );\n}\n\nconst Title = styled.h4`\n  font-family: var(--font-family-heading);\n`;\n\nconst Container = styled.div`\n  .post-metadata:after{\n    padding-left: 10px;\n    padding-right: 10px;\n    content: \"â€¢\";\n  }\n\n  a, a:visited{\n    color: var(--text-heading);\n    text-decoration: none;\n  }\n`;\n\nconst MorePostLink = styled.div`\n  text-align: center;\n  margin-top: 45px;\n  a {\n    padding: 10px;\n  }\n`;\n\nconst PostItem = styled.div`\n  margin-bottom: 25px;\n\n  .post-link {\n    a, a:visited {\n      display: inline-block;\n      font-weight: 400;\n      font-size: 1.2rem;\n      line-height: 1.5;\n      width:100%;\n      padding: 20px 15px 0px 0px;\n      border-radius: 10px;\n      ${onSmallMobile}{\n        padding-right: 0px;\n      }\n    }\n  }\n\n  a:hover{\n    /* background: var(--colors-hover-0); */\n  }\n\nh4{\n  margin:0;\n  padding:0;\n}\n`;\n\nconst Excerpt = styled.div`\n  color: var(--colors-text-3);\n  font-weight: 400;\n  font-size: 0.9rem;\n`;\n\nconst PostDate = styled.time`\n  color: var(--colors-text-3);\n  font-weight: 400;\n  font-size: 0.8rem;\n`;\n\nconst TagContainer = styled.span`\n  /* margin-top: -5px;\n  margin-bottom:20px; */\n`;\n\nconst Tag = styled.span`\n  a, a:visited {\n    color: var(--colors-text-3);\n  }\n\n  font-size: 0.8rem;\n  margin-right: 15px;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n\n  ${onSmallMobile}{\n    flex-wrap: wrap;\n  }\n`;\n\nconst FlexItem = styled.div`\n  width: ${({ cover }) => cover? '230px': '100%'};\n  margin-right: ${({ cover }) => cover? '30px': '0'};\n\n  ${onTablet} {\n    width: ${({ cover }) => cover? '150px': '100%'};;\n  }\n\n  img{\n    width: 230px;\n    padding: 5px;\n\n    ${onTablet} {\n      width: 150px;\n    }\n\n    ${onMobile} {\n      width: 150px;\n    }\n\n    ${onSmallMobile} {\n      width: 100%;\n      margin-right:0;\n    }\n  }\n\n  ${onSmallMobile} {\n    width: 100%;\n    margin-right:0;\n  }\n`;\n// console.log(onSmallMobile)\nexport default CoverPostListing;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport numeral from 'numeral';\nimport { parseISO, format } from \"date-fns\";\nimport { getTagPathname } from \"../../utils/path-utils\";\n\nfunction SidePostListing({ postEdges, trending }) {\n  const postList = [];\n  postEdges.forEach((postEdge) => {\n    const tags = [];\n    if (postEdge.node.frontmatter.tags) {\n      postEdge.node.frontmatter.tags.forEach((tag) => {\n        tags.push(tag);\n      });\n    }\n\n    postList.push({\n      path: postEdge.node.fields.renderedPathname,\n      tags,\n      cover: postEdge.node.frontmatter.cover,\n      title: postEdge.node.frontmatter.title,\n      date: postEdge.node.fields.date\n        ? postEdge.node.fields.date\n        : \"2021-01-01\",\n      excerpt: postEdge.node.excerpt,\n      timeToRead: postEdge.node.timeToRead,\n      pageview: trending? postEdge.node.fields.trendingPageview : postEdge.node.fields.pageview,\n    });\n  });\n\n  return (\n    <Container>\n      {\n        postList.map((post) => (\n          <PostItem key={post.path}>\n              <FlexContainer>\n                <FlexItem>\n                  <Link className=\"post-link\" to={post.path}>\n                   <Title>{post.title}</Title>\n                  </Link>\n                </FlexItem>\n                <FlexItem>\n                  <PostMetadata>\n                    <PostDate className=\"post-metadata\">\n                      {format(new Date(), \"yyyy\") === format(parseISO(post.date), \"yyyy\")\n                        ? format(parseISO(post.date), \"MMM, d\")\n                        : format(parseISO(post.date), \"yyyy MMM, d\")}\n                    </PostDate>\n                    {/* {post.tags.length > 0 && (\n                      <Tag className=\"post-metadata\">\n                        <Link to={getTagPathname(post.tags[0])}>\n                          {post.tags[0]}\n                        </Link>\n                      </Tag>\n                    )} */}\n                    <span>{numeral(post.pageview).format('0,0')} views</span>\n                  </PostMetadata>\n                </FlexItem>\n              </FlexContainer>\n          </PostItem>\n        ))\n      }\n    </Container>\n  );\n}\nconst Title = styled.h4`\n  font-weight: 500;\n  font-family: var(--font-family-heading);\n`;\n\nconst Container = styled.div`\n  .post-metadata:after{\n    padding-left: 10px;\n    padding-right: 10px;\n    content: \"Â·\";\n  }\n\n  a, a:visited{\n    color: var(--text-heading);\n    text-decoration: none;\n  }\n`;\n\nconst PostMetadata = styled.span`\n  font-size: 0.8rem;\n  color: var(--colors-text-3);\n\n  a, a:visited {\n    font-size: 0.8rem;\n    color: var(--colors-text-3);\n  }\n`;\n\nconst PostDate = styled.time`\n  font-weight: 400;\n  padding-top: 5px;\n`;\n\nconst PostItem = styled.div`\n  margin-bottom: 30px;\n\n  .post-link{\n    a, a:visited {\n      display: inline-block;\n      font-weight: 400;\n      font-size: 0.8rem;\n      line-height: 1.5;\n      width: 100%;\n      padding: 20px 15px 10px 0px;\n      border-radius: 10px;\n    }\n  }\n\n  h4 {\n    font-size: 1rem;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst TagContainer = styled.div`\n  margin-top: -5px;\n  margin-bottom: 20px;\n`;\n\n\nconst Tag = styled.span`\n  a, a:visited {\n    padding: 5px;\n  }\n\n  margin-right: 15px;\n`;\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst FlexItem = styled.div`\n  min-width: 100%;\n`;\n\nexport default SidePostListing;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { onMobile, onTablet } from \"../themes/responsive\";\nimport \"../themes/font-awesome-all-5.2.0.css\";\nimport LinkButton from \"./Button\";\nimport UserLinks from \"./UserLinks/UserLinks\";\nimport config from \"../../data/SiteConfig\";\n\ninterface IBook {\n  name: string;\n  url: string;\n  image: string;\n}\n\nconst bookData: IBook[] = [\n  {\n    name: \"TypeScript TH\",\n    url: \"https://typescript-th.thadaw.com/\",\n    image: \"/files/books/typescript.jpg\",\n  },\n  {\n    name: \"GitHub Actions TH\",\n    url: \"https://github-actions-th.thadaw.com/\",\n    image: \"/files/books/github-actions.jpg\",\n  },\n  {\n    name: \"Terraform TH\",\n    url: \"https://terraform-th.thadaw.com/\",\n    image: \"/files/books/terraform.jpg\",\n  },\n];\nconst Books = (props: any) => {\n  const { ...restProps } = props;\n\n  return (\n    <Container {...restProps}>\n      {bookData.map((book) => (\n        <BookItem href={book.url} target='_blank' >\n          <BookCover>\n            <img src={book.image} />\n          </BookCover>\n          <BookTitle>{book.name}</BookTitle>\n        </BookItem>\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin-bottom: 50px;\n  display: flex;\n  justify-content: space-evenly;\n\n  ${onMobile} {\n    flex-wrap: wrap;\n  }\n`;\n\nconst Social = styled.p`\n  margin-left: 8px;\n  margin-top: 20px;\n  font-size: 0.7rem;\n`;\n\nconst BookItem = styled.a`\n  margin-top: 20px;\n  padding: 20px;\n  border-radius: 10px;\n  :hover{\n    background: var(--colors-hover-0);\n    cursor: pointer;\n  }\n`;\n\nconst BookTitle = styled.div`\n  font-size: 0.8rem;\n  text-align: center;\n`;\n\nconst BookCover = styled.div`\n  img {\n    max-width: 200px;\n  }\n`;\n\nexport default Books;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport PageLayout from \"../layout/PageLayout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport CoverPostListing from \"../components/PostListing/CoverPostListing\";\nimport SidePostListing from \"../components/PostListing/SidePostListing\";\nimport Hero from \"../components/Hero\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport { onMobile, onTablet, useResponsive } from \"../themes/responsive\";\nimport Books from \"../components/Books\";\n\nfunction Landing({ data }) {\n  const postEdges = data.allMarkdownRemark.edges;\n  const popularPostEdges = data.popularPost.edges;\n  const trendingPostEdges = data.trendingPost.edges;\n  const { isMobile } = useResponsive();\n  console.log(onMobile);\n  return (\n    <PageLayout wide>\n      <div className=\"landing-container\">\n        <div className=\"posts-container\">\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <TwoColumnLayout>\n            <TwoColumnItem main>\n              {isMobile && <Hero />}\n              <Header>My Books (Thai)</Header>\n              <Books />\n              <Header>Recent posts</Header>\n              <HorizontalDivider/>\n              <CoverPostListing postEdges={postEdges} />\n            </TwoColumnItem>\n            <TwoColumnItem>\n              {!isMobile && <Hero />}\n              <Header>Trending posts</Header>\n              <SubHeader>A Month Earlier</SubHeader>\n              <HorizontalDivider/>\n              <SidePostListing postEdges={trendingPostEdges} trending />\n              <Header style={{marginTop:'65px'}}>Popular posts</Header>\n              <SubHeader>Lifetime</SubHeader>\n              <HorizontalDivider/>\n              <SidePostListing postEdges={popularPostEdges} />\n            </TwoColumnItem>\n          </TwoColumnLayout>\n        </div>\n      </div>\n    </PageLayout>\n  );\n}\n\nexport default Landing;\n\nconst TwoColumnLayout = styled.div`\n  display: flex;\n  ${onMobile} {\n    flex-direction: column;\n  }\n`;\n\nconst TwoColumnItem = styled.div`\n  padding-right: ${(p) => (p.main ? 45 : 0)}px;\n  margin-right: ${(p) => (p.main ? 45 : 0)}px;\n  border-right: ${(p) => (p.main ? '1px solid var(--colors-text-4)' : 0)};\n  width: ${(p) => (p.main ? 70 : 30)}%;\n  ${onMobile} {\n    width: 100%;\n    padding: 0;\n    padding-right: 0;\n    margin-right: 0;\n    border-right: 0;\n  }\n`;\n\nconst HorizontalDivider = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\nconst SubHeader = styled.div`\n  margin-top: 0;\n  margin-bottom: 10px;\n  text-transform: lowercase;\n  font-family: var(--font-family-inter);\n  /* font-weight: 500; */\n  font-size: 0.7rem;\n\n  ${onTablet} {\n    font-size: 0.8rem;\n  }\n`;\n\nconst Header = styled.h4`\n  /* margin-top: 55px; */\n  margin-bottom: 0;\n  text-transform: uppercase;\n  font-family: var(--font-family-inter);\n  /* font-weight: 500; */\n  font-size: 0.8rem;\n\n  ${onTablet} {\n    font-size: 0.9rem;\n  }\n`;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query LandingQuery {\n    allMarkdownRemark: allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      filter: { fields: { isDraft: { eq: false } } }\n      limit: 4\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n            readableSlug\n            renderedPathname\n            pageview\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            unsplashImgCoverId\n          }\n        }\n      }\n    }\n    popularPost: allMarkdownRemark(\n      sort: { fields: [fields___pageview], order: DESC }\n      filter: { fields: { isDraft: { eq: false } } }\n      limit: 7\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n            readableSlug\n            renderedPathname\n            pageview\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n          }\n        }\n      }\n    }\n    trendingPost: allMarkdownRemark(\n      sort: { fields: [fields___trendingPageview], order: DESC }\n      filter: { fields: { isDraft: { eq: false } } }\n      limit: 3\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n            readableSlug\n            renderedPathname\n            pageview\n            trendingPageview\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}