{"version":3,"sources":["webpack://gatsby-starter-advanced/./src/components/Button.tsx","webpack://gatsby-starter-advanced/./src/components/Hero.tsx","webpack://gatsby-starter-advanced/./src/components/PostListing/PostListing.jsx","webpack://gatsby-starter-advanced/./src/pages/draft.jsx"],"names":["styled","Container","onMobile","Subtitle","Social","props","restProps","href","target","UserLinks","config","Title","PostDate","PostItem","FlexContainer","breakpoint","FlexItem","width","postEdges","postList","forEach","postEdge","tags","node","frontmatter","tag","push","path","fields","renderedPathname","cover","title","date","excerpt","timeToRead","map","post","key","Link","to","format","parseISO","data","allMarkdownRemark","edges","className","Header"],"mappings":"qMAgBA,EAdmBA,kBAAH,8DAAGA,CAAH,6J,6BCsBVC,EAAYD,oBAAH,2DAAGA,CAAH,yGAQTE,MAQAC,EAAWH,qBAAH,0DAAGA,CAAH,iCAIRI,EAASJ,kBAAH,wDAAGA,CAAH,uDAMZ,EAzCa,SAACK,GACZ,IAAWC,EAAX,iBAAyBD,GAEzB,OACE,gBAACJ,EAAcK,EACb,sFAA6D,gBAACH,EAAD,2EAE3D,gBAAC,EAAD,CAAYI,KAAK,UAAjB,gBACA,gBAAC,EAAD,CAAYA,KAAK,MAAMC,OAAO,UAA9B,cAEA,gBAACJ,EAAD,4BAA4B,gBAACK,EAAA,EAAD,CAAWC,OAAQA,U,4GCuCvD,IAAMC,EAAQX,mBAAH,0DAAGA,CAAH,6CAKLY,EAAWZ,qBAAH,6DAAGA,CAAH,gEAMRa,EAAWb,oBAAH,6DAAGA,CAAH,sRAoCRc,GAXed,oBAAH,iEAAGA,CAAH,yCAKNA,qBAAH,wDAAGA,CAAH,oEAMaA,oBAAH,kEAAGA,CAAH,qCAIfe,QAAW,SAAXA,CAJe,oDASbC,EAAWhB,oBAAH,6DAAGA,CAAH,wBAGVe,QAAW,SAAXA,CAHU,+CAIG,gBAAGE,EAAH,EAAGA,MAAH,OAAgBA,GAAgB,MAIjD,IApHA,YAAqC,IAAdC,EAAa,EAAbA,UACfC,EAAW,GAoBjB,OAnBAD,EAAUE,SAAQ,SAACC,GACjB,IAAMC,EAAO,GACTD,EAASE,KAAKC,YAAYF,MAC5BD,EAASE,KAAKC,YAAYF,KAAKF,SAAQ,SAACK,GACtCH,EAAKI,KAAKD,MAIdN,EAASO,KAAK,CACZC,KAAON,EAASE,KAAKK,OAAOC,iBAC5BP,OACAQ,MAAOT,EAASE,KAAKC,YAAYM,MACjCC,MAAOV,EAASE,KAAKC,YAAYO,MACjCC,KAAMX,EAASE,KAAKK,OAAOI,KAAKX,EAASE,KAAKK,OAAOI,KAAM,aAC3DC,QAASZ,EAASE,KAAKU,QACvBC,WAAYb,EAASE,KAAKW,gBAK5B,2BAGIf,EAASgB,KAAI,SAACC,GAAD,OACX,gBAACvB,EAAD,CAAWwB,IAAKD,EAAKT,MACnB,gBAAC,EAAAW,KAAD,CAAMC,GAAIH,EAAKT,MAEb,gBAACb,EAAD,KACE,gBAACE,EAAD,CAAUC,MAAM,SACd,gBAACL,EAAD,MACG4B,QAAOC,OAASL,EAAKJ,MAAO,iBAGjC,gBAAChB,EAAD,KACE,gBAACL,EAAD,KAAQyB,EAAKL,iB,sJChB/B,UAfA,YAA4B,IACpBb,EADmB,EAARwB,KACMC,kBAAkBC,MACzC,OACE,gBAAC,IAAD,KACE,uBAAKC,UAAU,qBACb,uBAAKA,UAAU,mBACb,gBAAC,IAAD,CAAQd,MAAOrB,gBACf,gBAACoC,EAAD,2BACA,gBAAC,IAAD,CAAa5B,UAAWA,QASlC,IAAM4B,EAAS9C,mBAAH,wDAAGA,CAAH,+DAKRe,QAAW,SAAXA,CALQ","file":"component---src-pages-draft-jsx-c12b4fe8da14f5f3dd18.js","sourcesContent":["import styled from 'styled-components';\n\nconst LinkButton = styled.a`\n  font-weight: bold;\n  padding: 10px;\n  border-radius: 10px;\n  :hover{\n    background: var(--colors-hover-0);\n    cursor: pointer;\n  }\n  i{\n    color: var(--color-default);\n    font-size: 1.2em;\n  }\n`;\n\nexport default LinkButton;\n","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { onMobile, onTablet } from '../themes/responsive';\nimport \"../themes/font-awesome-all-5.2.0.css\";\nimport LinkButton from \"./Button\";\nimport UserLinks from \"./UserLinks/UserLinks\";\nimport config from \"../../data/SiteConfig\";\n\nconst Hero = (props: any) => {\n  const { ...restProps } = props;\n\n  return (\n    <Container {...restProps}>\n      <h2>Hi ðŸ‘‹ I'm Thada, DevSecOps Engineer, welcome to my blog. <Subtitle>\n        Sharing ideas, programming techniques, web technology and others.</Subtitle></h2>\n        <LinkButton href=\"/about\">ðŸ‘¤&nbsp; About Me</LinkButton>\n        <LinkButton href=\"/cv\" target=\"_blank\">ðŸ“„&nbsp; Resume</LinkButton>\n        {/* <LinkButton href=\"https://github.com/mildronize\" target=\"_blank\"><i className=\"fab fa-github\"></i>&nbsp; Github</LinkButton> */}\n        <Social>Getting to know me: <UserLinks config={config} /></Social>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n\n  margin-bottom: 100px;\n\n  h2{\n    font-family: var(--font-family-inter);\n    font-size: 1.3rem;\n\n    ${onMobile} {\n      font-size: 1.6rem;\n    }\n\n  }\n`;\n\n\nconst Subtitle = styled.span`\n  color: var(--colors-text-2);\n`;\n\nconst Social = styled.p`\n  margin-left: 8px;\n  margin-top: 20px;\n  font-size: 0.7rem;\n`;\n\nexport default Hero;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { parseISO, format } from \"date-fns\";\n\nfunction PostListing({ postEdges }) {\n  const postList = [];\n  postEdges.forEach((postEdge) => {\n    const tags = [];\n    if (postEdge.node.frontmatter.tags) {\n      postEdge.node.frontmatter.tags.forEach((tag) => {\n        tags.push(tag);\n      });\n    }\n\n    postList.push({\n      path:  postEdge.node.fields.renderedPathname,\n      tags,\n      cover: postEdge.node.frontmatter.cover,\n      title: postEdge.node.frontmatter.title,\n      date: postEdge.node.fields.date?postEdge.node.fields.date: \"2021-01-01\",\n      excerpt: postEdge.node.excerpt,\n      timeToRead: postEdge.node.timeToRead,\n    });\n  });\n\n  return (\n    <div>\n      {\n        /* Your post list here. */\n        postList.map((post) => (\n          <PostItem  key={post.path}>\n            <Link to={post.path} >\n              {/* <a className=\"post-item-link\"> */}\n              <FlexContainer>\n                <FlexItem width=\"150px\">\n                  <PostDate >\n                    {format(parseISO(post.date), \"yyyy MMM, d\")}\n                  </PostDate>\n                </FlexItem>\n                <FlexItem >\n                  <Title>{post.title}</Title>\n                  {/* <TagContainer>\n                    {post.tags.map((tag) => (\n                      <Tag>#{tag} </Tag>\n                    ))}\n                  </TagContainer> */}\n                </FlexItem>\n              </FlexContainer>\n            </Link>\n          </PostItem>\n        ))\n      }\n    </div>\n  );\n}\n\nconst Title = styled.h4`\n  font-family: var(--font-family-heading);\n`;\n\n\nconst PostDate = styled.time`\n  color: var(--colors-text-3);\n  font-weight: 400;\n  font-size: 1rem;\n`;\n\nconst PostItem = styled.div`\n  margin-bottom:10px;\n\n  a, a:visited{\n    display: inline-block;\n    color: var(--text-heading);\n    font-weight: 400;\n    font-size: 1.2rem;\n    line-height: 1.5;\n    text-decoration: none;\n    width:100%;\n    padding: 20px 15px 20px 15px;\n    border-radius: 10px;\n  }\n\n  a:hover{\n    background: var(--colors-hover-0);\n  }\n\nh4{\n  margin:0;\n  padding:0;\n}\n`;\n\nconst TagContainer = styled.div`\n  margin-top: -5px;\n  margin-bottom:20px;\n`;\n\nconst Tag = styled.span`\n  color: var(--colors-text-3);\n  font-size: 0.8rem;\n  margin-right: 20px;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  ${breakpoint('tablet')`\n    flex-wrap: nowrap;\n  `}\n`;\n\nconst FlexItem = styled.div`\n  min-width: 100%;\n\n  ${breakpoint('tablet')`\n    min-width: ${({ width }) => (width ? width : 0)};\n  `}\n`;\n\nexport default PostListing;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout/PageLayout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport Hero from \"../components/Hero\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\n\nfunction Landing({ data }) {\n  const postEdges = data.allMarkdownRemark.edges;\n  return (\n    <Layout>\n      <div className=\"landing-container\">\n        <div className=\"posts-container\">\n          <Helmet title={config.siteTitle} />\n          <Header>All draft articles</Header>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Landing;\n\nconst Header = styled.h4`\n  font-family: var(--font-family-inter);\n  /* font-weight: 500; */\n  font-size: 1.4rem;\n\n  ${breakpoint('tablet')`\n      font-size: 1.5rem;\n    `}\n`;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query DraftQuery {\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      filter: { fields: { isDraft: { eq: true } } }\n      ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n            readableSlug\n            renderedPathname\n            isDraft\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}