{"version":3,"sources":["webpack://gatsby-starter-advanced/./src/components/Button.tsx","webpack://gatsby-starter-advanced/./src/components/Hero.tsx","webpack://gatsby-starter-advanced/./src/components/PageTitle.tsx","webpack://gatsby-starter-advanced/./src/components/PostListing/PostListingByYear.jsx","webpack://gatsby-starter-advanced/./src/pages/posts.jsx"],"names":["styled","Container","onMobile","Subtitle","Social","props","restProps","href","target","UserLinks","config","PageTitle","PostListing","postList","year","map","post","parseInt","format","parseISO","date","PostItem","key","path","Link","to","FlexContainer","FlexItem","PostTitle","title","width","PostDate","Title","textNonOverflow","postEdges","yearSet","Set","yearGroup","forEach","postEdge","tags","node","frontmatter","tag","push","fields","renderedPathname","cover","excerpt","timeToRead","add","Array","from","sort","a","b","data","allMarkdownRemark","edges","className","Helmet"],"mappings":"oMAgBA,EAdmBA,kBAAH,8DAAGA,CAAH,6J,6BCsBVC,EAAYD,oBAAH,2DAAGA,CAAH,yGAQTE,MAQAC,EAAWH,qBAAH,0DAAGA,CAAH,iCAIRI,EAASJ,kBAAH,wDAAGA,CAAH,uDAMZ,EAzCa,SAACK,GACZ,IAAWC,EAAX,iBAAyBD,GAEzB,OACE,gBAACJ,EAAcK,EACb,sFAA6D,gBAACH,EAAD,2EAE3D,gBAAC,EAAD,CAAYI,KAAK,UAAjB,gBACA,gBAAC,EAAD,CAAYA,KAAK,MAAMC,OAAO,UAA9B,cAEA,gBAACJ,EAAD,4BAA4B,gBAACK,EAAA,EAAD,CAAWC,OAAQA,U,qCCjBjDC,E,KAAYX,iBAAH,qDAAGA,CAAH,uNAcf,O,kLCkCA,SAASY,EAAT,GAA0C,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAC/B,OACE,2BAEID,EAASE,KAAI,SAACC,GAAD,OACXC,UAASC,QAAOC,OAASH,EAAKI,MAAO,WAAcN,GACnD,gBAACO,EAAD,CAAWC,IAAKN,EAAKO,MACnB,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKO,MACb,gBAACG,EAAD,KACE,gBAACC,EAAD,KACE,gBAACC,EAAD,KAAYZ,EAAKa,QAEnB,gBAACF,EAAD,CAAUG,MAAM,QACd,gBAACC,EAAD,MACGb,QAAOC,OAASH,EAAKI,MAAO,kBAWjD,IAAMY,EAAQhC,mBAAH,gEAAGA,CAAH,4EAaLiC,EAAe,wEAMfL,EAAY5B,mBAAH,oEAAGA,CAAH,+NAZG,8EAoBdE,KACE+B,EAMAA,GAUAF,EAAW/B,qBAAH,mEAAGA,CAAH,kEAMRqB,EAAWrB,oBAAH,mEAAGA,CAAH,4OAGVE,MAiBEwB,EAAgB1B,oBAAH,wEAAGA,CAAH,wFAOb2B,EAAW3B,oBAAH,mEAAGA,CAAH,sCACK,qBAAG8B,MAAqB,MAAQ,UACpC,gBAAGA,EAAH,EAAGA,MAAH,OAAgBA,GAAgB,UAG/C,EAtJA,YAA2C,IAAdI,EAAa,EAAbA,UACrBrB,EAAW,GACXsB,EAAU,IAAIC,IAChBC,EAAY,GA2BhB,OA1BAH,EAAUI,SAAQ,SAACC,GACjB,IAAMC,EAAO,GACTD,EAASE,KAAKC,YAAYF,MAC5BD,EAASE,KAAKC,YAAYF,KAAKF,SAAQ,SAACK,GACtCH,EAAKI,KAAKD,MAId,IAAMvB,EAAQmB,EAASE,KAAKI,OAAOzB,KAAKmB,EAASE,KAAKI,OAAOzB,KAAM,aAEnEP,EAAS+B,KAAK,CACZrB,KAAOgB,EAASE,KAAKI,OAAOC,iBAC5BN,OACAO,MAAOR,EAASE,KAAKC,YAAYK,MACjClB,MAAOU,EAASE,KAAKC,YAAYb,MACjCT,OACA4B,QAAST,EAASE,KAAKO,QACvBC,WAAYV,EAASE,KAAKQ,aAG5Bd,EAAQe,IAAIjC,UAASC,QAAOC,OAASC,GAAO,aAI9CiB,EAAYc,MAAMC,KAAKjB,GAASkB,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAID,KAGhD,2BAEIjB,EAAUtB,KAAI,SAAAD,GAAI,OAChB,gCAAE,gBAACkB,EAAD,KAAQlB,GACR,gBAACF,EAAD,CAAaC,SAAUA,EAAUC,KAAMA,U,oCCfnD,MAfA,YAAiC,IACzBoB,EADwB,EAARsB,KACCC,kBAAkBC,MACzC,OACE,gBAAC,IAAD,KACE,uBAAKC,UAAU,qBACb,uBAAKA,UAAU,mBACb,gBAACC,EAAA,EAAD,CAAQ/B,MAAOnB,gBACf,gBAACC,EAAA,EAAD,kBACA,gBAAC,EAAD,CAAauB,UAAWA","file":"component---src-pages-posts-jsx-c1d418af3b0794f67602.js","sourcesContent":["import styled from 'styled-components';\n\nconst LinkButton = styled.a`\n  font-weight: bold;\n  padding: 10px;\n  border-radius: 10px;\n  :hover{\n    background: var(--colors-hover-0);\n    cursor: pointer;\n  }\n  i{\n    color: var(--color-default);\n    font-size: 1.2em;\n  }\n`;\n\nexport default LinkButton;\n","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { onMobile, onTablet } from '../themes/responsive';\nimport \"../themes/font-awesome-all-5.2.0.css\";\nimport LinkButton from \"./Button\";\nimport UserLinks from \"./UserLinks/UserLinks\";\nimport config from \"../../data/SiteConfig\";\n\nconst Hero = (props: any) => {\n  const { ...restProps } = props;\n\n  return (\n    <Container {...restProps}>\n      <h2>Hi ðŸ‘‹ I'm Thada, DevSecOps Engineer, welcome to my blog. <Subtitle>\n        Sharing ideas, programming techniques, web technology and others.</Subtitle></h2>\n        <LinkButton href=\"/about\">ðŸ‘¤&nbsp; About Me</LinkButton>\n        <LinkButton href=\"/cv\" target=\"_blank\">ðŸ“„&nbsp; Resume</LinkButton>\n        {/* <LinkButton href=\"https://github.com/mildronize\" target=\"_blank\"><i className=\"fab fa-github\"></i>&nbsp; Github</LinkButton> */}\n        <Social>Getting to know me: <UserLinks config={config} /></Social>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n\n  margin-bottom: 100px;\n\n  h2{\n    font-family: var(--font-family-inter);\n    font-size: 1.3rem;\n\n    ${onMobile} {\n      font-size: 1.6rem;\n    }\n\n  }\n`;\n\n\nconst Subtitle = styled.span`\n  color: var(--colors-text-2);\n`;\n\nconst Social = styled.p`\n  margin-left: 8px;\n  margin-top: 20px;\n  font-size: 0.7rem;\n`;\n\nexport default Hero;\n","import styled from 'styled-components';\n\nconst PageTitle = styled.h2`\n  color: var(--colors-text-0);\n  font-family: var(--font-family-inter);\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: 0.3px;\n  font-size: 1.7rem;\n  margin-bottom: 40px;\n  a {\n    text-decoration: underline;\n    color: var(--colors-text-1);\n  }\n`;\n\nexport default PageTitle;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport { parseISO, format } from \"date-fns\";\nimport { onSmallMobile, onMobile } from \"../../themes/responsive\";\n\nfunction PostListingByYear({ postEdges }) {\n  const postList = [];\n  const yearSet = new Set();\n  let yearGroup = [];\n  postEdges.forEach((postEdge) => {\n    const tags = [];\n    if (postEdge.node.frontmatter.tags) {\n      postEdge.node.frontmatter.tags.forEach((tag) => {\n        tags.push(tag);\n      });\n    }\n\n    const date  = postEdge.node.fields.date?postEdge.node.fields.date: \"2021-01-01\"\n\n    postList.push({\n      path:  postEdge.node.fields.renderedPathname,\n      tags,\n      cover: postEdge.node.frontmatter.cover,\n      title: postEdge.node.frontmatter.title,\n      date,\n      excerpt: postEdge.node.excerpt,\n      timeToRead: postEdge.node.timeToRead,\n    });\n\n    yearSet.add(parseInt(format(parseISO(date), \"yyyy\")));\n\n  });\n\n  yearGroup = Array.from(yearSet).sort((a,b) => b - a);\n\n  return (\n    <div>\n      {\n        yearGroup.map(year => (\n          <><Title>{year}</Title>\n            <PostListing postList={postList} year={year}/>\n          </>\n        ))\n      }\n    </div>\n  );\n}\n\nfunction PostListing({ postList, year }) {\n  return (\n    <div>\n      {\n        postList.map((post) => (\n          parseInt(format(parseISO(post.date), \"yyyy\"))) === year &&\n          <PostItem  key={post.path}>\n            <Link to={post.path} >\n              <FlexContainer>\n                <FlexItem >\n                  <PostTitle>{post.title}</PostTitle>\n                </FlexItem>\n                <FlexItem width=\"50px\">\n                  <PostDate >\n                    {format(parseISO(post.date), \"MM-dd\")}\n                  </PostDate>\n                </FlexItem>\n              </FlexContainer>\n            </Link>\n          </PostItem>\n        )\n      }\n    </div>\n  );\n}\nconst Title = styled.h4`\n  font-size: 1.2rem;\n  font-weight: 600;\n  font-family: var(--font-family-inter);\n`;\n\n// text overflow to ellipsis\nconst textOverflow = `\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst textNonOverflow = `\n  overflow: auto;\n  white-space: normal;\n  text-overflow: none;\n`\n\nconst PostTitle = styled.h4`\n  font-size: 1rem;\n  font-weight: 400;\n  font-family: var(--font-family-default);\n  transition: all ease-out 0.2s;\n\n  ${textOverflow}\n\n  ${onMobile}{\n    ${textNonOverflow}\n    margin-bottom: 20px;\n  }\n\n\n  :hover {\n    ${textNonOverflow}\n    color: var(--colors-brand);\n    transform: scale(1.02);\n    // font-size: 0.95rem;\n  }\n  margin: 5px 0 0 0;\n  padding: 0;\n`;\n\n\nconst PostDate = styled.time`\n  color: var(--colors-text-3);\n  font-weight: 400;\n  font-size: 0.9rem;\n`;\n\nconst PostItem = styled.div`\n  margin-right:36px;\n  margin-left: 36px;\n  ${onMobile}{\n    margin-left: 0px;\n  }\n  a, a:visited{\n    margin-top: 0px;\n    display: inline-block;\n    color: var(--text-heading);\n    font-weight: 300;\n    font-size: 1.2rem;\n    line-height: 1.5;\n    text-decoration: none;\n    width:100%;\n    border-radius: 10px;\n  }\n\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  jusify-content: space-between;\n  flex-wrap: nowrap;\n`;\n\nconst FlexItem = styled.div`\n  padding-right: ${({ width }) => (width ? '0px' : '40px')};\n  min-width: ${({ width }) => (width ? width : '100%')};\n`;\n\nexport default PostListingByYear;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport PageTitle from \"../components/PageTitle\";\nimport Layout from \"../layout/PageLayout\";\nimport PostListing from \"../components/PostListing/PostListingByYear\";\nimport Hero from \"../components/Hero\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\n\nfunction BlogListPage({ data }) {\n  const postEdges = data.allMarkdownRemark.edges;\n  return (\n    <Layout>\n      <div className=\"landing-container\">\n        <div className=\"posts-container\">\n          <Helmet title={config.siteTitle} />\n          <PageTitle>All Posts</PageTitle>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default BlogListPage;\n\n// const Header = styled.h4`\n//   font-family: var(--font-family-inter);\n//   /* font-weight: 500; */\n//   font-size: 1.4rem;\n\n//   ${breakpoint('tablet')`\n//       font-size: 1.5rem;\n//     `}\n// `;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogListPageQuery {\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      filter: { fields: { isDraft: { eq: false } } }\n      ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n            readableSlug\n            renderedPathname\n            isDraft\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}