{"version":3,"sources":["webpack://gatsby-starter-advanced/./src/pages/404.tsx","webpack://gatsby-starter-advanced/./data/globalConfig.js"],"names":["data","useState","isNotFound","setIsNotFound","useEffect","urlSlug","uuid","window","extractUuidFromPathname","location","pathname","targetSlug","findRenderedPathname","allMarkdownRemark","console","log","replace","globalConfig","className","title","config","style","textAlign","http-equiv","content","module","exports","actions","REDIRECT"],"mappings":"8NA0EA,UAjEA,YAAuC,IAApBA,EAAmB,EAAnBA,KAEjB,GAAoCC,eAAS,GAAtCC,EAAP,KAAmBC,EAAnB,KAyBA,OANAC,gBAAU,WACR,IAlBgBC,EAkBVC,EALDC,QACEC,QAAwBD,OAAOE,SAASC,UAD3B,GAMdC,GAAaC,QAAqBN,EAAON,EAAaa,mBAnB5CR,EAoBPM,EAnBLJ,SACc,KAAZF,GAEFS,QAAQC,IAAR,eAA2BV,GAC3BE,OAAOE,SAASO,QAAWX,EAA3B,WAA6CY,uBAE7Cd,GAAc,MAcjB,IAGD,gBAAC,IAAD,KACE,uBAAKe,UAAU,mBACb,gBAAC,IAAD,CAAQC,MAAK,eAAiBC,gBAE7BlB,GACC,uBAAKmB,MAAO,CAAEC,UAAW,WACvB,wBAAMC,aAAW,UAAUC,QAAQ,cACnC,iCACA,4CACA,wE,iBCvCZC,EAAOC,QAPQ,CACbC,QAAS,CAEPC,SAAU","file":"component---src-pages-404-tsx-9bfcd9a82cbbf0dbdd5d.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { PageProps, graphql, navigate } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport Layout from \"../layout\";\nimport config from \"../../data/SiteConfig\";\nimport globalConfig from \"../../data/globalConfig\";\nimport { useState } from \"react\";\nimport { extractUuidFromPathname, findRenderedPathname } from \"../utils/path-utils\";\n\nfunction Page404({ data }: PageProps) {\n\n  const [isNotFound, setIsNotFound] = useState(false);\n\n  const redirect = (urlSlug: string) => {\n    if (window) {\n      if (urlSlug !== '') {\n        // Remove this page from history, user can browse with short link.\n        console.log(`Redirect to ${urlSlug}`);\n        window.location.replace(`${urlSlug}?action=${globalConfig.actions.REDIRECT}`);\n      } else {\n        setIsNotFound(true);\n      }\n    }\n  }\n\n  const handleInvalidUrl = () => {\n    if (!window) return '';\n    return extractUuidFromPathname(window.location.pathname);\n  }\n\n  useEffect(() => {\n    const uuid = handleInvalidUrl();\n    const targetSlug = findRenderedPathname(uuid, (data as any).allMarkdownRemark);\n    redirect(targetSlug);\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"about-container\">\n        <Helmet title={`Not Found | ${config.siteTitle}`} />\n\n        {isNotFound &&\n          <div style={{ textAlign: 'center' }}>\n            <meta http-equiv=\"refresh\" content=\"2;URL='/'\" />\n            <h1>404</h1>\n            <h1>PAGE NOT FOUND</h1>\n            <p>We're redirecting to homepage instead.</p>\n          </div>\n        }\n\n      </div>\n    </Layout>\n  );\n}\n\n\nexport const query = graphql`\n   {\n    allMarkdownRemark {\n      edges {\n        node {\n          fields {\n            filename\n            slug\n            readableSlug\n            renderedPathname\n            isDraft\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Page404;\n","const config = {\n  actions: {\n    // string: URL friendly string\n    REDIRECT: 'redirect', // For 404 Page\n  }\n}\n\nmodule.exports = config;\n"],"sourceRoot":""}